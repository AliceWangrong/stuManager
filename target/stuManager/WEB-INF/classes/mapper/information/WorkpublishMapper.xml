<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dao.information.WorkpublishMapper">
  <resultMap id="BaseResultMap" type="com.bean.information.Workpublish">
    <id column="work_id" jdbcType="INTEGER" property="workId" />
    <result column="work_request" jdbcType="VARCHAR" property="workRequest" />
    <result column="work_data" jdbcType="VARCHAR" property="workData" />
    <result column="work_findata" jdbcType="VARCHAR" property="workFindata" />
    <result column="class_id" jdbcType="INTEGER" property="classId" />
    <result column="curr_id" jdbcType="INTEGER" property="currId" />
    <result column="tea_no" jdbcType="INTEGER" property="teaNo" />
  </resultMap>
  <resultMap id="BaseResult" type="com.bean.information.Workpublish">
    <id column="work_id" jdbcType="INTEGER" property="workId" />
    <result column="work_request" jdbcType="VARCHAR" property="workRequest" />
    <result column="work_data" jdbcType="VARCHAR" property="workData" />
    <result column="work_findata" jdbcType="VARCHAR" property="workFindata" />
    <result column="class_id" jdbcType="INTEGER" property="classId" />
    <result column="curr_id" jdbcType="INTEGER" property="currId" />
    <result column="tea_no" jdbcType="INTEGER" property="teaNo" />
    <association property="banji" javaType="com.bean.information.Class">
      <id column="class_id" property="classId"/>
      <result column="class_name" property="className"/>
      <result column="class_college" property="classCollege"/>
      <result column="class_depart" property="classDepart"/>
    </association>
    <association property="curriculum" javaType="com.bean.information.Curriculum">
      <id column="curr_id" property="currId"/>
      <result column="curr_name" property="currName"/>
    </association>

  </resultMap>



  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    work_id, work_request, work_data, work_findata, class_id, curr_id, tea_no
  </sql>
  <select id="selectByExample" parameterType="com.bean.information.WorkpublishExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_workpublish
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_workpublish
    where work_id = #{workId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_workpublish
    where work_id = #{workId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.bean.information.WorkpublishExample">
    delete from tb_workpublish
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bean.information.Workpublish" useGeneratedKeys="true" keyProperty="workId">
    insert into tb_workpublish (work_request, work_data,
      work_findata, class_id, curr_id, 
      tea_no)
    values (#{workRequest,jdbcType=VARCHAR}, #{workData,jdbcType=VARCHAR},
      #{workFindata,jdbcType=VARCHAR}, #{classId,jdbcType=INTEGER}, #{currId,jdbcType=INTEGER}, 
      #{teaNo,jdbcType=INTEGER})
  </insert>
  <select id="huodeId" parameterType="com.bean.information.Workpublish" resultType="java.lang.Integer">
    select work_id  from tb_workpublish where  work_request=#{workRequest,jdbcType=VARCHAR} and work_findata=#{workFindata,jdbcType=VARCHAR}
  </select>
  <insert id="insertSelective" parameterType="com.bean.information.Workpublish">
    insert into tb_workpublish
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="workId != null">
        work_id,
      </if>
      <if test="workRequest != null">
        work_request,
      </if>
      <if test="workData != null">
        work_data,
      </if>
      <if test="workFindata != null">
        work_findata,
      </if>
      <if test="classId != null">
        class_id,
      </if>
      <if test="currId != null">
        curr_id,
      </if>
      <if test="teaNo != null">
        tea_no,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="workId != null">
        #{workId,jdbcType=INTEGER},
      </if>
      <if test="workRequest != null">
        #{workRequest,jdbcType=VARCHAR},
      </if>
      <if test="workData != null">
        #{workData,jdbcType=VARCHAR},
      </if>
      <if test="workFindata != null">
        #{workFindata,jdbcType=VARCHAR},
      </if>
      <if test="classId != null">
        #{classId,jdbcType=INTEGER},
      </if>
      <if test="currId != null">
        #{currId,jdbcType=INTEGER},
      </if>
      <if test="teaNo != null">
        #{teaNo,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bean.information.WorkpublishExample" resultType="java.lang.Long">
    select count(*) from tb_workpublish
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>

  <select id="selectByid" parameterType="java.lang.Integer" resultMap="BaseResult">
    select * from tb_workpublish
    LEFT JOIN tb_curriculum ON tb_workpublish.curr_id=tb_curriculum.curr_id
    LEFT JOIN tb_class ON tb_workpublish.class_id=tb_class.class_id
    where
     work_id = #{workId,jdbcType=INTEGER}
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_workpublish
    <set>
      <if test="record.workId != null">
        work_id = #{record.workId,jdbcType=INTEGER},
      </if>
      <if test="record.workRequest != null">
        work_request = #{record.workRequest,jdbcType=VARCHAR},
      </if>
      <if test="record.workData != null">
        work_data = #{record.workData,jdbcType=VARCHAR},
      </if>
      <if test="record.workFindata != null">
        work_findata = #{record.workFindata,jdbcType=VARCHAR},
      </if>
      <if test="record.classId != null">
        class_id = #{record.classId,jdbcType=INTEGER},
      </if>
      <if test="record.currId != null">
        curr_id = #{record.currId,jdbcType=INTEGER},
      </if>
      <if test="record.teaNo != null">
        tea_no = #{record.teaNo,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_workpublish
    set work_id = #{record.workId,jdbcType=INTEGER},
      work_request = #{record.workRequest,jdbcType=VARCHAR},
      work_data = #{record.workData,jdbcType=VARCHAR},
      work_findata = #{record.workFindata,jdbcType=VARCHAR},
      class_id = #{record.classId,jdbcType=INTEGER},
      curr_id = #{record.currId,jdbcType=INTEGER},
      tea_no = #{record.teaNo,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bean.information.Workpublish">
    update tb_workpublish
    <set>
      <if test="workRequest != null">
        work_request = #{workRequest,jdbcType=VARCHAR},
      </if>
      <if test="workData != null">
        work_data = #{workData,jdbcType=VARCHAR},
      </if>
      <if test="workFindata != null">
        work_findata = #{workFindata,jdbcType=VARCHAR},
      </if>
      <if test="classId != null">
        class_id = #{classId,jdbcType=INTEGER},
      </if>
      <if test="currId != null">
        curr_id = #{currId,jdbcType=INTEGER},
      </if>
      <if test="teaNo != null">
        tea_no = #{teaNo,jdbcType=INTEGER},
      </if>
    </set>
    where work_id = #{workId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bean.information.Workpublish">
    update tb_workpublish
    set work_request = #{workRequest,jdbcType=VARCHAR},
      work_data = #{workData,jdbcType=VARCHAR},
      work_findata = #{workFindata,jdbcType=VARCHAR},
      class_id = #{classId,jdbcType=INTEGER},
      curr_id = #{currId,jdbcType=INTEGER},
      tea_no = #{teaNo,jdbcType=INTEGER}
    where work_id = #{workId,jdbcType=INTEGER}
  </update>
</mapper>